# Generated by Django 5.2.3 on 2025-06-29 15:39

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Camion',
            fields=[
                ('pk_camion', models.CharField(max_length=250, primary_key=True, serialize=False)),
                ('immatriculation', models.CharField(max_length=20, unique=True)),
                ('modele', models.CharField(blank=True, max_length=50, null=True)),
                ('capacite_tonnes', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
            ],
        ),
        migrations.CreateModel(
            name='Chauffeur',
            fields=[
                ('pk_chauffeur', models.CharField(editable=False, max_length=250, primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=50)),
                ('prenom', models.CharField(max_length=50)),
                ('telephone', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Fournisseur',
            fields=[
                ('pk_fournisseur', models.CharField(max_length=250, primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=100)),
                ('telephone', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('adresse', models.TextField(blank=True, null=True)),
                ('fiabilite', models.CharField(choices=[('bon', 'Bon'), ('moyen', 'Moyen'), ('mauvais', 'Mauvais')], default='bon', max_length=10)),
                ('commentaire', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Mecanicien',
            fields=[
                ('pk_mecanicien', models.CharField(max_length=250, primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=100)),
                ('telephone', models.CharField(max_length=20, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('pk_client', models.CharField(max_length=250, primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=100)),
                ('type_client', models.CharField(choices=[('entreprise', 'Entreprise'), ('particulier', 'Particulier')], max_length=50)),
                ('telephone', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('score_fidelite', models.IntegerField(default=100)),
                ('etat_paiement', models.CharField(choices=[('bon', 'Bon'), ('moyen', 'Moyen'), ('mauvais', 'Mauvais'), ('bloqué', 'Bloqué')], default='bon', max_length=10)),
                ('commentaire', models.TextField(blank=True, null=True)),
            ],
            options={
                'unique_together': {('nom', 'type_client', 'telephone')},
            },
        ),
        migrations.CreateModel(
            name='CompagnieConteneur',
            fields=[
                ('pk_compagnie', models.CharField(max_length=250, primary_key=True, serialize=False)),
                ('nom', models.CharField(blank=True, max_length=250, null=True)),
            ],
            options={
                'unique_together': {('nom',)},
            },
        ),
        migrations.CreateModel(
            name='Conteneur',
            fields=[
                ('pk_conteneur', models.CharField(max_length=250, primary_key=True, serialize=False)),
                ('numero_conteneur', models.CharField(max_length=30, unique=True)),
                ('type_conteneur', models.CharField(blank=True, max_length=50, null=True)),
                ('poids', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transport.client')),
                ('compagnie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transport.compagnieconteneur')),
            ],
        ),
        migrations.CreateModel(
            name='Entreprise',
            fields=[
                ('pk_entreprise', models.CharField(editable=False, max_length=250, primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=100)),
                ('secteur_activite', models.CharField(blank=True, max_length=100, null=True)),
                ('email_contact', models.EmailField(blank=True, max_length=100, null=True, unique=True)),
                ('telephone_contact', models.CharField(blank=True, max_length=20, null=True)),
                ('date_creation', models.DateField(default=django.utils.timezone.now)),
                ('statut', models.CharField(choices=[('active', 'Active'), ('suspendue', 'Suspendue')], default='active', max_length=10)),
            ],
            options={
                'unique_together': {('nom', 'secteur_activite', 'email_contact', 'date_creation')},
            },
        ),
        migrations.CreateModel(
            name='ContratTransport',
            fields=[
                ('pk_contrat', models.CharField(max_length=250, primary_key=True, serialize=False)),
                ('date_debut', models.DateField()),
                ('date_limite_retour', models.DateField()),
                ('caution', models.DecimalField(decimal_places=2, max_digits=10)),
                ('statut_caution', models.CharField(choices=[('bloquée', 'Bloquée'), ('débloquée', 'Débloquée')], default='bloquée', max_length=10)),
                ('commentaire', models.TextField(blank=True, null=True)),
                ('signature_chauffeur', models.BooleanField(default=False)),
                ('signature_client', models.BooleanField(default=False)),
                ('signature_transitaire', models.BooleanField(default=False)),
                ('camion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transport.camion')),
                ('chauffeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transport.chauffeur')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='transport.client')),
                ('conteneur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transport.conteneur')),
                ('entreprise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transport.entreprise')),
            ],
        ),
        migrations.AddField(
            model_name='chauffeur',
            name='entreprise',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transport.entreprise'),
        ),
        migrations.AddField(
            model_name='camion',
            name='entreprise',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transport.entreprise'),
        ),
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('pk_utilisateur', models.CharField(max_length=250, primary_key=True, serialize=False)),
                ('nom_utilisateur', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('manager', 'Manager'), ('utilisateur', 'Utilisateur'), ('chauffeur', 'Chauffeur')], default='utilisateur', max_length=10)),
                ('actif', models.BooleanField(default=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('entreprise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transport.entreprise')),
            ],
            options={
                'db_table': 'utilisateur',
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='FraisTrajet',
            fields=[
                ('pk_frais', models.CharField(max_length=250, primary_key=True, serialize=False)),
                ('origine', models.CharField(max_length=50)),
                ('destination', models.CharField(max_length=50)),
                ('frais_route', models.DecimalField(decimal_places=2, max_digits=10)),
                ('frais_carburant', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'unique_together': {('origine', 'destination')},
            },
        ),
        migrations.CreateModel(
            name='PrestationDeTransports',
            fields=[
                ('pk_presta_transport', models.CharField(max_length=250, primary_key=True, serialize=False)),
                ('prix_transport', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('avance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('caution', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('solde', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('date', models.DateTimeField()),
                ('camion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transport.camion')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transport.client')),
                ('contrat_transport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transport.contrattransport')),
            ],
        ),
        migrations.CreateModel(
            name='Mission',
            fields=[
                ('pk_mission', models.CharField(editable=False, max_length=250, primary_key=True, serialize=False)),
                ('date_depart', models.DateField()),
                ('date_retour', models.DateField(blank=True, null=True)),
                ('origine', models.CharField(max_length=50)),
                ('destination', models.CharField(max_length=50)),
                ('statut', models.CharField(choices=[('en cours', 'En cours'), ('terminée', 'Terminée'), ('annulée', 'Annulée')], default='en cours', max_length=10)),
                ('contrat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transport.contrattransport')),
                ('frais_trajet', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='transport.fraistrajet')),
                ('prestation_transport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transport.prestationdetransports')),
            ],
            options={
                'unique_together': {('prestation_transport', 'contrat', 'origine', 'destination', 'date_depart')},
            },
        ),
        migrations.CreateModel(
            name='Reparation',
            fields=[
                ('pk_reparation', models.CharField(max_length=250, primary_key=True, serialize=False)),
                ('date_reparation', models.DateField()),
                ('cout', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('camion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transport.camion')),
                ('chauffeur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='transport.chauffeur')),
            ],
        ),
        migrations.CreateModel(
            name='Transitaire',
            fields=[
                ('pk_transitaire', models.CharField(max_length=250, primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=100)),
                ('telephone', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('score_fidelite', models.IntegerField(default=100)),
                ('etat_paiement', models.CharField(choices=[('bon', 'Bon'), ('moyen', 'Moyen'), ('mauvais', 'Mauvais'), ('bloqué', 'Bloqué')], default='bon', max_length=10)),
                ('commentaire', models.TextField(blank=True, null=True)),
            ],
            options={
                'unique_together': {('nom', 'telephone')},
            },
        ),
        migrations.AddField(
            model_name='prestationdetransports',
            name='transitaire',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transport.transitaire'),
        ),
        migrations.AddField(
            model_name='contrattransport',
            name='transitaire',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='transport.transitaire'),
        ),
        migrations.AddField(
            model_name='conteneur',
            name='transitaire',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transport.transitaire'),
        ),
        migrations.CreateModel(
            name='Cautions',
            fields=[
                ('pk_caution', models.CharField(max_length=250, primary_key=True, serialize=False)),
                ('montant', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('non_rembourser', models.BooleanField(default=False)),
                ('est_rembourser', models.BooleanField(default=True)),
                ('montant_rembourser', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('camion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='transport.camion')),
                ('chauffeur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='transport.chauffeur')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='transport.client')),
                ('conteneur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='transport.conteneur')),
                ('contrat', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='transport.contrattransport')),
                ('transiteur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='transport.transitaire')),
            ],
        ),
        migrations.CreateModel(
            name='Affectation',
            fields=[
                ('pk_affectation', models.CharField(editable=False, max_length=250, primary_key=True, serialize=False)),
                ('date_affectation', models.DateField(default=django.utils.timezone.now)),
                ('date_fin_affectation', models.DateField(blank=True, null=True)),
                ('camion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transport.camion')),
                ('chauffeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transport.chauffeur')),
            ],
            options={
                'unique_together': {('chauffeur', 'camion', 'date_affectation')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='chauffeur',
            unique_together={('nom', 'prenom', 'email', 'entreprise')},
        ),
        migrations.AlterUniqueTogether(
            name='camion',
            unique_together={('immatriculation', 'modele', 'entreprise')},
        ),
        migrations.CreateModel(
            name='MissionConteneur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conteneur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transport.conteneur')),
                ('mission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transport.mission')),
            ],
            options={
                'managed': True,
                'unique_together': {('mission', 'conteneur')},
            },
        ),
        migrations.CreateModel(
            name='PaiementMission',
            fields=[
                ('pk_paiement', models.CharField(max_length=250, primary_key=True, serialize=False)),
                ('montant_total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('commission_transitaire', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('caution_est_retiree', models.BooleanField(default=False)),
                ('date_paiement', models.DateField(auto_now_add=True)),
                ('mode_paiement', models.CharField(blank=True, max_length=50, null=True)),
                ('observation', models.TextField(blank=True, null=True)),
                ('caution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transport.cautions')),
                ('mission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transport.mission')),
                ('prestation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transport.prestationdetransports')),
            ],
            options={
                'unique_together': {('mission', 'caution', 'prestation')},
            },
        ),
        migrations.CreateModel(
            name='PieceReparee',
            fields=[
                ('pk_piece', models.CharField(max_length=250, primary_key=True, serialize=False)),
                ('nom_piece', models.CharField(max_length=100)),
                ('categorie', models.CharField(choices=[('moteur', 'Moteur'), ('transmission', 'Transmission'), ('suspension', 'Suspension & Direction'), ('freinage', 'Freinage'), ('electrique', 'Éléments électriques'), ('eclairage', 'Éclairage & Signalisation'), ('auxiliaire', 'Systèmes auxiliaires'), ('carrosserie', 'Carrosserie & Structure'), ('pneumatique', 'Pneumatiques & Roues'), ('alimentation', "Système d'alimentation")], max_length=20)),
                ('reference', models.CharField(blank=True, help_text='Référence fabricant', max_length=50, null=True)),
                ('quantite', models.PositiveIntegerField(default=1)),
                ('cout_unitaire', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('fournisseur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='transport.fournisseur')),
                ('reparation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transport.reparation')),
            ],
            options={
                'unique_together': {('nom_piece', 'reparation')},
            },
        ),
        migrations.CreateModel(
            name='ReparationMecanicien',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mecanicien', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transport.mecanicien')),
                ('reparation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transport.reparation')),
            ],
            options={
                'unique_together': {('reparation', 'mecanicien')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='prestationdetransports',
            unique_together={('camion', 'pk_presta_transport', 'contrat_transport', 'client', 'transitaire')},
        ),
        migrations.AlterUniqueTogether(
            name='contrattransport',
            unique_together={('conteneur', 'client', 'transitaire', 'entreprise', 'camion', 'chauffeur', 'date_debut', 'date_limite_retour')},
        ),
        migrations.AlterUniqueTogether(
            name='conteneur',
            unique_together={('numero_conteneur', 'compagnie', 'client')},
        ),
    ]
